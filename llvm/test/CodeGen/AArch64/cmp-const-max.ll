; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -verify-machineinstrs -aarch64-enable-atomic-cfg-tidy=0 < %s -mtriple=aarch64 -fast-isel=false | FileCheck %s


define i32 @ule_64_max(i64 %p) {
; CHECK-LABEL: ule_64_max:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    cbnz wzr, .LBB0_2
; CHECK-NEXT:  // %bb.1: // %ret_one
; CHECK-NEXT:    mov w0, #1 // =0x1
; CHECK-NEXT:    ret
; CHECK-NEXT:  .LBB0_2: // %ret_zero
; CHECK-NEXT:    mov w0, wzr
; CHECK-NEXT:    ret
entry:
  %cmp = icmp ule i64 %p, 18446744073709551615 ; 0xffffffffffffffff
  br i1 %cmp, label %ret_one, label %ret_zero

ret_one:
  ret i32 1

ret_zero:
  ret i32 0
}

define i32 @ugt_64_max(i64 %p) {
; CHECK-LABEL: ugt_64_max:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    mov w8, #1 // =0x1
; CHECK-NEXT:    cbnz w8, .LBB1_2
; CHECK-NEXT:  // %bb.1: // %ret_one
; CHECK-NEXT:    mov w0, #1 // =0x1
; CHECK-NEXT:    ret
; CHECK-NEXT:  .LBB1_2: // %ret_zero
; CHECK-NEXT:    mov w0, wzr
; CHECK-NEXT:    ret
entry:
  %cmp = icmp ugt i64 %p, 18446744073709551615 ; 0xffffffffffffffff
  br i1 %cmp, label %ret_one, label %ret_zero

ret_one:
  ret i32 1

ret_zero:
  ret i32 0
}
