; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs < %s -mtriple=powerpc-unknown-linux-gnu -mattr=+altivec -disable-ppc-ilp-pref  | FileCheck %s
; Formerly this did byte loads and word stores.
@a = external global <16 x i8>
@b = external global <16 x i8>
@c = external global <16 x i8>

define void @foo() nounwind ssp {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    stwu 1, -112(1)
; CHECK-NEXT:    li 3, a@l
; CHECK-NEXT:    lis 4, a@ha
; CHECK-NEXT:    li 5, .LCPI0_0@l
; CHECK-NEXT:    lvx 2, 4, 3
; CHECK-NEXT:    lis 3, .LCPI0_0@ha
; CHECK-NEXT:    li 4, .LCPI0_1@l
; CHECK-NEXT:    lvx 3, 3, 5
; CHECK-NEXT:    lis 3, .LCPI0_1@ha
; CHECK-NEXT:    li 5, .LCPI0_2@l
; CHECK-NEXT:    lvx 4, 3, 4
; CHECK-NEXT:    lis 3, .LCPI0_2@ha
; CHECK-NEXT:    li 4, .LCPI0_3@l
; CHECK-NEXT:    lvx 5, 3, 5
; CHECK-NEXT:    lis 3, .LCPI0_3@ha
; CHECK-NEXT:    li 5, .LCPI0_4@l
; CHECK-NEXT:    lvx 0, 3, 4
; CHECK-NEXT:    lis 3, .LCPI0_4@ha
; CHECK-NEXT:    li 4, .LCPI0_5@l
; CHECK-NEXT:    lvx 1, 3, 5
; CHECK-NEXT:    lis 3, .LCPI0_5@ha
; CHECK-NEXT:    li 5, .LCPI0_6@l
; CHECK-NEXT:    lvx 6, 3, 4
; CHECK-NEXT:    lis 3, .LCPI0_6@ha
; CHECK-NEXT:    li 4, .LCPI0_7@l
; CHECK-NEXT:    lvx 7, 3, 5
; CHECK-NEXT:    lis 3, .LCPI0_7@ha
; CHECK-NEXT:    lvx 8, 3, 4
; CHECK-NEXT:    addi 3, 1, 96
; CHECK-NEXT:    stvx 2, 0, 3
; CHECK-NEXT:    li 3, .LCPI0_8@l
; CHECK-NEXT:    lbz 4, 100(1)
; CHECK-NEXT:    lis 5, .LCPI0_8@ha
; CHECK-NEXT:    lvx 9, 5, 3
; CHECK-NEXT:    vxor 10, 10, 10
; CHECK-NEXT:    lis 5, .LCPI0_9@ha
; CHECK-NEXT:    lbz 3, 101(1)
; CHECK-NEXT:    vperm 3, 2, 10, 3
; CHECK-NEXT:    stb 4, 80(1)
; CHECK-NEXT:    addi 4, 1, 80
; CHECK-NEXT:    lvx 11, 0, 4
; CHECK-NEXT:    vand 3, 3, 4
; CHECK-NEXT:    addi 4, 1, 16
; CHECK-NEXT:    stb 3, 64(1)
; CHECK-NEXT:    addi 3, 1, 64
; CHECK-NEXT:    lvx 4, 0, 3
; CHECK-NEXT:    li 3, 0
; CHECK-NEXT:    stb 3, 16(1)
; CHECK-NEXT:    vperm 3, 3, 11, 5
; CHECK-NEXT:    lbz 3, 104(1)
; CHECK-NEXT:    vperm 3, 3, 4, 0
; CHECK-NEXT:    lvx 5, 0, 4
; CHECK-NEXT:    stb 3, 48(1)
; CHECK-NEXT:    addi 3, 1, 48
; CHECK-NEXT:    lbz 4, 105(1)
; CHECK-NEXT:    vperm 3, 3, 5, 1
; CHECK-NEXT:    lvx 4, 0, 3
; CHECK-NEXT:    li 3, .LCPI0_9@l
; CHECK-NEXT:    lvx 0, 5, 3
; CHECK-NEXT:    vperm 3, 3, 5, 6
; CHECK-NEXT:    addi 3, 1, 32
; CHECK-NEXT:    stb 4, 32(1)
; CHECK-NEXT:    vperm 3, 3, 4, 7
; CHECK-NEXT:    lis 4, .LCPI0_10@ha
; CHECK-NEXT:    lvx 4, 0, 3
; CHECK-NEXT:    li 3, .LCPI0_10@l
; CHECK-NEXT:    lvx 1, 4, 3
; CHECK-NEXT:    li 3, c@l
; CHECK-NEXT:    vperm 3, 3, 4, 8
; CHECK-NEXT:    lis 4, c@ha
; CHECK-NEXT:    vperm 3, 3, 5, 9
; CHECK-NEXT:    vperm 3, 3, 5, 0
; CHECK-NEXT:    vperm 2, 3, 2, 1
; CHECK-NEXT:    stvx 2, 4, 3
; CHECK-NEXT:    addi 1, 1, 112
; CHECK-NEXT:    blr
entry:
    %tmp0 = load <16 x i8>, ptr @a, align 16
  %tmp180.i = extractelement <16 x i8> %tmp0, i32 0 ; <i8> [#uses=1]
  %tmp181.i = insertelement <16 x i8> <i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, i8 %tmp180.i, i32 2 ; <<16 x i8>> [#uses=1]
  %tmp182.i = extractelement <16 x i8> %tmp0, i32 1 ; <i8> [#uses=1]
  %tmp183.i = insertelement <16 x i8> %tmp181.i, i8 %tmp182.i, i32 3 ; <<16 x i8>> [#uses=1]
  %tmp184.i = insertelement <16 x i8> %tmp183.i, i8 0, i32 4 ; <<16 x i8>> [#uses=1]
  %tmp185.i = insertelement <16 x i8> %tmp184.i, i8 0, i32 5 ; <<16 x i8>> [#uses=1]
  %tmp186.i = extractelement <16 x i8> %tmp0, i32 4 ; <i8> [#uses=1]
  %tmp187.i = insertelement <16 x i8> %tmp185.i, i8 %tmp186.i, i32 6 ; <<16 x i8>> [#uses=1]
  %tmp188.i = extractelement <16 x i8> %tmp0, i32 5 ; <i8> [#uses=1]
  %tmp189.i = insertelement <16 x i8> %tmp187.i, i8 %tmp188.i, i32 7 ; <<16 x i8>> [#uses=1]
  %tmp190.i = insertelement <16 x i8> %tmp189.i, i8 0, i32 8 ; <<16 x i8>> [#uses=1]
  %tmp191.i = insertelement <16 x i8> %tmp190.i, i8 0, i32 9 ; <<16 x i8>> [#uses=1]
  %tmp192.i = extractelement <16 x i8> %tmp0, i32 8 ; <i8> [#uses=1]
  %tmp193.i = insertelement <16 x i8> %tmp191.i, i8 %tmp192.i, i32 10 ; <<16 x i8>> [#uses=1]
  %tmp194.i = extractelement <16 x i8> %tmp0, i32 9 ; <i8> [#uses=1]
  %tmp195.i = insertelement <16 x i8> %tmp193.i, i8 %tmp194.i, i32 11 ; <<16 x i8>> [#uses=1]
  %tmp196.i = insertelement <16 x i8> %tmp195.i, i8 0, i32 12 ; <<16 x i8>> [#uses=1]
  %tmp197.i = insertelement <16 x i8> %tmp196.i, i8 0, i32 13 ; <<16 x i8>> [#uses=1]
%tmp201 = shufflevector <16 x i8> %tmp197.i, <16 x i8> %tmp0, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 28, i32 29>; ModuleID = 'try.c'
    store <16 x i8> %tmp201, ptr @c, align 16
    br label %return

return:		; preds = %bb2
	ret void
}
